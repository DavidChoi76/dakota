method: stoch_collocation

analysis_driver: dakota_run_plugin
asynchronous: false
auxiliary_files:
basis_polynomial_family: extended
coefficient_estimation_approach: quadrature_order_sequence
component: {component}          # set by hook
configuration_file: config.yaml
convergence_tolerance:
data_file: dakota.dat
descriptors:
- "{descriptor1}"
- "{descriptor2}"
- "{descriptor3}"
dimension_preference:
evaluation_concurrency: 2
gradients: no_gradients
hessians: no_hessians
id_interface: CSDMS
initial_point:
input_file: dakota.in
interface: fork
lower_bounds:
- {lower_bound1}
- {lower_bound2}
- {lower_bound3}
max_iterations:
means:
- {mean1}
- {mean2}
- {mean3}
nested: false
output_file: dakota.out
probability_levels:
- {probability_levels1}
- {probability_levels2}
- {probability_levels3}
quadrature_order: {quadrature_order} 
response_descriptors:
- "{response_descriptor1}"
- "{response_descriptor2}"
- "{response_descriptor3}"
response_files:
response_levels:
- {response_levels1}
- {response_levels2}
- {response_levels3}
response_statistics:
- "{response_statistic1}"
- "{response_statistic2}"
- "{response_statistic3}"
responses: response_functions
run_directory: .
sample_type: "{sample_type}"
samples: {samples}
seed: {seed}
std_deviations:
- {std_deviation1}
- {std_deviation2}
- {std_deviation3}
template_file: {template_file}  # set by hook
upper_bounds:
- {upper_bound1}
- {upper_bound2}
- {upper_bound3}
variables: "{variable_type}"
variance_based_decomp: {variance_based_decomp}

# Notes:
# * For uniform_uncertain variables, ignore means and std_deviations.
# * The values of response_levels and probability_levels need to be
#   converted to lists.
# * BMI handles auxiliary_files and response_files.
# * coefficient_estimation_approach must be set, but the only option
#   currently is quadrature_order_sequence.
# * dimension_preference isn't implemented.
